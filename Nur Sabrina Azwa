#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>

#define NUM_LENGTH 4
#define NUM_WAIT_INTERVAL 2

void getNUM(char num[NUM_LENGTH + 1]){
  srand (getppid() + getpid());
  
  num[0] = 49 + rand() % 7;
  
  for(int i=1; i<NUM_LENGTH; i++){
    num[i] = 48 + rand() % 7;
  }
    num[NUM_LENGTH] = '\0';
}

int main(void) {
  
    void sigint_handler(int sig);
    
    if(signal(SIGINT. sigint_handler) == SIG_ERR){
      perror("signal");
      exit(1);
    }
    
    while(1){
      int pipefds[2];
      char num[NUM_LENGTH + 1];
      char buffer[NUM_LENGTH + 1];
      char s[20];
      char name[20];
      
      pipe(pipefds);
      
      pid_t pid = fork();
      
      if(pid == 0){
        getNUM(num);
        close(pipefds[0]);
        write(pipefds[1], num, NUM_LENGTH + 1);
        
        printf(" Please enter your name: \n");
        fgets(name, 20, stdin);
        
        printf("\n Hi %s System is generaing your queue number... \n", name);
        
        sleep(NUM_WAIT_INTERVAL);
        
        exit(EXIT_SUCCESS);
      }
      
      if(pid > 0){
        wait(NULL);
        
        close(pipefds[1]);
        read(pipefds[0], buffer, NUM_LENGTH + 1);
        close(pipefds[0]);
        
        printf(" \n Receiving your queue number... \n\n");
        
        sleep(NUM_WAIT_INTERVAL);
        
        printf(" Thank you for waiting. This is your queue number : '%s' \n\n", buffer);
      }
      
    }   return EXIT_SUCCESS;
}

  void sigint_handler(int sig)
  {
    printf(" Machine stops working! \n");
  }
  
  
  
